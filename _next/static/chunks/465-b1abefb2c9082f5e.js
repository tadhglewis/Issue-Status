(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[465],{5115:function(e,r,t){"use strict";t.d(r,{v:function(){return ee}});var s=t(5042);function o(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof s&&void 0!==s.version?`Node.js/${s.version.substr(1)} (${s.platform}; ${s.arch})`:"<environment undetectable>"}var n=t(4649),i=`octokit-endpoint.js/9.0.5 ${o()}`;function a(e){for(let r in e)void 0===e[r]&&delete e[r];return e}function c(e,r,t){var s;if("string"==typeof r){let[e,s]=r.split(" ");t=Object.assign(s?{method:e,url:s}:{url:e},t)}else t=Object.assign({},r);t.headers=(s=t.headers)?Object.keys(s).reduce((e,r)=>(e[r.toLowerCase()]=s[r],e),{}):{},a(t),a(t.headers);let o=function e(r,t){let s=Object.assign({},r);return Object.keys(t).forEach(o=>{(function(e){if("object"!=typeof e||null===e||"[object Object]"!==Object.prototype.toString.call(e))return!1;let r=Object.getPrototypeOf(e);if(null===r)return!0;let t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return"function"==typeof t&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)})(t[o])&&o in r?s[o]=e(r[o],t[o]):Object.assign(s,{[o]:t[o]})}),s}(e||{},t);return"/graphql"===t.url&&(e&&e.mediaType.previews?.length&&(o.mediaType.previews=e.mediaType.previews.filter(e=>!o.mediaType.previews.includes(e)).concat(o.mediaType.previews)),o.mediaType.previews=(o.mediaType.previews||[]).map(e=>e.replace(/-preview/,""))),o}var p=/\{[^}]+\}/g;function l(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function u(e,r){let t={__proto__:null};for(let s of Object.keys(e))-1===r.indexOf(s)&&(t[s]=e[s]);return t}function d(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function g(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function m(e,r,t){return(r="+"===e||"#"===e?d(r):g(r),t)?g(t)+"="+r:r}function h(e){return null!=e}function T(e){return";"===e||"&"===e||"?"===e}function E(e,r){var t=["+","#",".","/",";","?","&"];return"/"===(e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,s,o){if(!s)return d(o);{let e="",o=[];if(-1!==t.indexOf(s.charAt(0))&&(e=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach(function(t){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);o.push(function(e,r,t,s){var o=e[t],n=[];if(h(o)&&""!==o){if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),s&&"*"!==s&&(o=o.substring(0,parseInt(s,10))),n.push(m(r,o,T(r)?t:""));else if("*"===s)Array.isArray(o)?o.filter(h).forEach(function(e){n.push(m(r,e,T(r)?t:""))}):Object.keys(o).forEach(function(e){h(o[e])&&n.push(m(r,o[e],e))});else{let e=[];Array.isArray(o)?o.filter(h).forEach(function(t){e.push(m(r,t))}):Object.keys(o).forEach(function(t){h(o[t])&&(e.push(g(t)),e.push(m(r,o[t].toString())))}),T(r)?n.push(g(t)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}}else";"===r?h(o)&&n.push(g(t)):""===o&&("&"===r||"?"===r)?n.push(g(t)+"="):""===o&&n.push("");return n}(r,e,s[1],s[2]||s[3]))}),!e||"+"===e)return o.join(",");var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==o.length?e:"")+o.join(n)}}))?e:e.replace(/\/$/,"")}function f(e){let r,t=e.method.toUpperCase(),s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),n=u(e,["method","baseUrl","url","headers","request","mediaType"]),i=function(e){let r=e.match(p);return r?r.map(l).reduce((e,r)=>e.concat(r),[]):[]}(s);s=({expand:E.bind(null,s)}).expand(n),/^http/.test(s)||(s=e.baseUrl+s);let a=u(n,Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map(r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),s.endsWith("/graphql")&&e.mediaType.previews?.length)){let r=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=r.concat(e.mediaType.previews).map(r=>{let t=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${r}-preview${t}`}).join(",")}return["GET","HEAD"].includes(t)?s=function(e,r){let t=/\?/.test(e)?"&":"?",s=Object.keys(r);return 0===s.length?e:e+t+s.map(e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`).join("&")}(s,a):"data"in a?r=a.data:Object.keys(a).length&&(r=a),o["content-type"]||void 0===r||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&void 0===r&&(r=""),Object.assign({method:t,url:s,headers:o},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}function b(e,r,t){return f(c(e,r,t))}var w=function e(r,t){let s=c(r,t);return Object.assign(b.bind(null,s),{DEFAULTS:s,defaults:e.bind(null,s),merge:c.bind(null,s),parse:f})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":i},mediaType:{format:""}});class _ extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var v=t(9935),y=t.n(v),k=y()(e=>console.warn(e)),P=y()(e=>console.warn(e)),G=class extends Error{constructor(e,r,t){let s;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,"headers"in t&&void 0!==t.headers&&(s=t.headers),"response"in t&&(this.response=t.response,s=t.response.headers);let o=Object.assign({},t.request);t.request.headers.authorization&&(o.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get:()=>(k(new _("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),Object.defineProperty(this,"headers",{get:()=>(P(new _("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),s||{})})}};function S(e){let r,t;let s=e.request&&e.request.log?e.request.log:console,o=e.request?.parseSuccessResponseBody!==!1;((function(e){if("object"!=typeof e||null===e||"[object Object]"!==Object.prototype.toString.call(e))return!1;let r=Object.getPrototypeOf(e);if(null===r)return!0;let t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return"function"==typeof t&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)})(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let n={},{fetch:i}=globalThis;if(e.request?.fetch&&(i=e.request.fetch),!i)throw Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return i(e.url,{method:e.method,body:e.body,redirect:e.request?.redirect,headers:e.headers,signal:e.request?.signal,...e.body&&{duplex:"half"}}).then(async i=>{for(let e of(t=i.url,r=i.status,i.headers))n[e[0]]=e[1];if("deprecation"in n){let r=n.link&&n.link.match(/<([^>]+)>; rel="deprecation"/),t=r&&r.pop();s.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${n.sunset}${t?`. See ${t}`:""}`)}if(204!==r&&205!==r){if("HEAD"===e.method){if(r<400)return;throw new G(i.statusText,r,{response:{url:t,status:r,headers:n,data:void 0},request:e})}if(304===r)throw new G("Not modified",r,{response:{url:t,status:r,headers:n,data:await O(i)},request:e});if(r>=400){let s;let o=await O(i);throw new G("string"==typeof o?o:(s="documentation_url"in o?` - ${o.documentation_url}`:"","message"in o)?Array.isArray(o.errors)?`${o.message}: ${o.errors.map(JSON.stringify).join(", ")}${s}`:`${o.message}${s}`:`Unknown error: ${JSON.stringify(o)}`,r,{response:{url:t,status:r,headers:n,data:o},request:e})}return o?await O(i):i.body}}).then(e=>({status:r,url:t,headers:n,data:e})).catch(r=>{if(r instanceof G||"AbortError"===r.name)throw r;let t=r.message;throw"TypeError"===r.name&&"cause"in r&&(r.cause instanceof Error?t=r.cause.message:"string"==typeof r.cause&&(t=r.cause)),new G(t,500,{request:e})})}async function O(e){let r=e.headers.get("content-type");return/application\/json/.test(r)?e.json().catch(()=>e.text()).catch(()=>""):!r||/^text\/|charset=utf-8$/.test(r)?e.text():e.arrayBuffer()}var A=function e(r,t){let s=r.defaults(t);return Object.assign(function(r,t){let o=s.merge(r,t);if(!o.request||!o.request.hook)return S(s.parse(o));let n=(e,r)=>S(s.parse(s.merge(e,r)));return Object.assign(n,{endpoint:s,defaults:e.bind(null,s)}),o.request.hook(n,o)},{endpoint:s,defaults:e.bind(null,s)})}(w,{headers:{"user-agent":`octokit-request.js/8.4.0 ${o()}`}}),F=class extends Error{constructor(e,r,t){super(`Request failed due to following response errors:
`+t.errors.map(e=>` - ${e.message}`).join("\n")),this.request=e,this.headers=r,this.response=t,this.name="GraphqlResponseError",this.errors=t.errors,this.data=t.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},R=["method","baseUrl","url","headers","request","query","mediaType"],C=["query","method","url"],U=/\/api\/v3\/?$/;function D(e,r){let t=e.defaults(r);return Object.assign((e,r)=>(function(e,r,t){if(t){if("string"==typeof r&&"query"in t)return Promise.reject(Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let e in t)if(C.includes(e))return Promise.reject(Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}let s="string"==typeof r?Object.assign({query:r},t):r,o=Object.keys(s).reduce((e,r)=>(R.includes(r)?e[r]=s[r]:(e.variables||(e.variables={}),e.variables[r]=s[r]),e),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return U.test(n)&&(o.url=n.replace(U,"/api/graphql")),e(o).then(e=>{if(e.data.errors){let r={};for(let t of Object.keys(e.headers))r[t]=e.headers[t];throw new F(o,r,e.data)}return e.data.data})})(t,e,r),{defaults:D.bind(null,t),endpoint:t.endpoint})}D(A,{headers:{"user-agent":`octokit-graphql.js/7.1.0 ${o()}`},method:"POST",url:"/graphql"});var L=/^v1\./,$=/^ghs_/,j=/^ghu_/;async function I(e){let r=3===e.split(/\./).length,t=L.test(e)||$.test(e),s=j.test(e);return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}async function x(e,r,t,s){let o=r.endpoint.merge(t,s);return o.headers.authorization=3===e.split(/\./).length?`bearer ${e}`:`token ${e}`,r(o)}var q=function(e){if(!e)throw Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(I.bind(null,e),{hook:x.bind(null,e)})},M="5.2.0",H=()=>{},W=console.warn.bind(console),B=console.error.bind(console),z=`octokit-core.js/${M} ${o()}`,N=class{static{this.VERSION=M}static defaults(e){return class extends this{constructor(...r){let t=r[0]||{};if("function"==typeof e){super(e(t));return}super(Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null))}}}static{this.plugins=[]}static plugin(...e){let r=this.plugins;return class extends this{static{this.plugins=r.concat(e.filter(e=>!r.includes(e)))}}}constructor(e={}){let r=new n.Collection,t={baseUrl:A.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(t.headers["user-agent"]=e.userAgent?`${e.userAgent} ${z}`:z,e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=A.defaults(t),this.graphql=D(this.request,{method:"POST",url:"/graphql"}).defaults(t),this.log=Object.assign({debug:H,info:H,warn:W,error:B},e.log),this.hook=r,e.authStrategy){let{authStrategy:t,...s}=e,o=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));r.wrap("request",o.hook),this.auth=o}else if(e.auth){let t=q(e.auth);r.wrap("request",t.hook),this.auth=t}else this.auth=async()=>({type:"unauthenticated"});let s=this.constructor;for(let r=0;r<s.plugins.length;++r)Object.assign(this,s.plugins[r](this,e))}};function V(e){e.hook.wrap("request",(r,t)=>{e.log.debug("request",t);let s=Date.now(),o=e.request.endpoint.parse(t),n=o.url.replace(t.baseUrl,"");return r(t).then(r=>(e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`),r)).catch(r=>{throw e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`),r})})}function K(e,r,t){let s="function"==typeof r?r.endpoint(t):e.request.endpoint(r,t),o="function"==typeof r?r:e.request,n=s.method,i=s.headers,a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{let e=await o({method:n,url:a,headers:i}),r=function(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;let r=e.data.incomplete_results,t=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;let o=Object.keys(e.data)[0],n=e.data[o];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=s,e}(e);return a=((r.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:r}}catch(e){if(409!==e.status)throw e;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function Y(e,r,t,s){return"function"==typeof t&&(s=t,t=void 0),function e(r,t,s,o){return s.next().then(n=>{if(n.done)return t;let i=!1;return(t=t.concat(o?o(n.value,function(){i=!0}):n.value.data),i)?t:e(r,t,s,o)})}(e,[],K(e,r,t)[Symbol.asyncIterator](),s)}function J(e){return{paginate:Object.assign(Y.bind(null,e),{iterator:K.bind(null,e)})}}V.VERSION="4.0.1",Object.assign(Y,{iterator:K}),J.VERSION="11.3.1";var Z=new Map;for(let[e,r]of Object.entries({actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}}))for(let[t,s]of Object.entries(r)){let[r,o,n]=s,[i,a]=r.split(/ /),c=Object.assign({method:i,url:a},o);Z.has(e)||Z.set(e,new Map),Z.get(e).set(t,{scope:e,methodName:t,endpointDefaults:c,decorations:n})}var Q={has:({scope:e},r)=>Z.get(e).has(r),getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty:(e,r,t)=>(Object.defineProperty(e.cache,r,t),!0),deleteProperty:(e,r)=>(delete e.cache[r],!0),ownKeys:({scope:e})=>[...Z.get(e).keys()],set:(e,r,t)=>e.cache[r]=t,get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];let o=Z.get(r).get(s);if(!o)return;let{endpointDefaults:n,decorations:i}=o;return i?t[s]=function(e,r,t,s,o){let n=e.request.defaults(s);return Object.assign(function(...s){let i=n.endpoint.merge(...s);if(o.mapToData)return n(i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:void 0}));if(o.renamed){let[s,n]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${s}.${n}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){let i=n.endpoint.merge(...s);for(let[s,n]of Object.entries(o.renamedParameters))s in i&&(e.log.warn(`"${s}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`),n in i||(i[n]=i[s]),delete i[s]);return n(i)}return n(...s)},n)}(e,r,s,n,i):t[s]=e.request.defaults(n),t[s]}};function X(e){let r=function(e){let r={};for(let t of Z.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},Q);return r}(e);return{...r,rest:r}}X.VERSION="13.2.2";var ee=N.plugin(V,X,J).defaults({userAgent:"octokit-rest.js/20.1.1"})},4649:function(e,r,t){var s=t(4050),o=t(1867),n=t(9480),i=Function.bind,a=i.bind(i);function c(e,r,t){var s=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(s){var n=t?[r,s,t]:[r,s];e[s]=e.api[s]=a(o,null).apply(null,n)})}function p(){var e={registry:{}},r=s.bind(null,e);return c(r,e),r}var l=!1;function u(){return l||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),l=!0),p()}u.Singular=(function(){var e={registry:{}},r=s.bind(null,e,"h");return c(r,e,"h"),r}).bind(),u.Collection=p.bind(),e.exports=u,e.exports.Hook=u,e.exports.Singular=u.Singular,e.exports.Collection=u.Collection},1867:function(e){e.exports=function(e,r,t,s){var o=s;e.registry[t]||(e.registry[t]=[]),"before"===r&&(s=function(e,r){return Promise.resolve().then(o.bind(null,r)).then(e.bind(null,r))}),"after"===r&&(s=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then(function(e){return o(t=e,r)}).then(function(){return t})}),"error"===r&&(s=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch(function(e){return o(e,r)})}),e.registry[t].push({hook:s,orig:o})}},4050:function(e){e.exports=function e(r,t,s,o){if("function"!=typeof s)throw Error("method for before hook must be a function");return(o||(o={}),Array.isArray(t))?t.reverse().reduce(function(t,s){return e.bind(null,r,s,t,o)},s)():Promise.resolve().then(function(){return r.registry[t]?r.registry[t].reduce(function(e,r){return r.hook.bind(null,e,o)},s)():s(o)})}},9480:function(e){e.exports=function(e,r,t){if(e.registry[r]){var s=e.registry[r].map(function(e){return e.orig}).indexOf(t);-1!==s&&e.registry[r].splice(s,1)}}},6450:function(e){var r;r=function(){"use strict";var e="millisecond",r="second",t="minute",s="hour",o="week",n="month",i="quarter",a="year",c="date",p="Invalid Date",l=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,u=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d=function(e,r,t){var s=String(e);return!s||s.length>=r?e:""+Array(r+1-s.length).join(t)+e},g="en",m={};m[g]={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var r=["th","st","nd","rd"],t=e%100;return"["+e+(r[(t-20)%10]||r[t]||"th")+"]"}};var h="$isDayjsObject",T=function(e){return e instanceof w||!(!e||!e[h])},E=function e(r,t,s){var o;if(!r)return g;if("string"==typeof r){var n=r.toLowerCase();m[n]&&(o=n),t&&(m[n]=t,o=n);var i=r.split("-");if(!o&&i.length>1)return e(i[0])}else{var a=r.name;m[a]=r,o=a}return!s&&o&&(g=o),o||!s&&g},f=function(e,r){if(T(e))return e.clone();var t="object"==typeof r?r:{};return t.date=e,t.args=arguments,new w(t)},b={s:d,z:function(e){var r=-e.utcOffset(),t=Math.abs(r);return(r<=0?"+":"-")+d(Math.floor(t/60),2,"0")+":"+d(t%60,2,"0")},m:function e(r,t){if(r.date()<t.date())return-e(t,r);var s=12*(t.year()-r.year())+(t.month()-r.month()),o=r.clone().add(s,n),i=t-o<0,a=r.clone().add(s+(i?-1:1),n);return+(-(s+(t-o)/(i?o-a:a-o))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(p){return({M:n,y:a,w:o,d:"day",D:c,h:s,m:t,s:r,ms:e,Q:i})[p]||String(p||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}};b.l=E,b.i=T,b.w=function(e,r){return f(e,{locale:r.$L,utc:r.$u,x:r.$x,$offset:r.$offset})};var w=function(){function d(e){this.$L=E(e.locale,null,!0),this.parse(e),this.$x=this.$x||e.x||{},this[h]=!0}var g=d.prototype;return g.parse=function(e){this.$d=function(e){var r=e.date,t=e.utc;if(null===r)return new Date(NaN);if(b.u(r))return new Date;if(r instanceof Date)return new Date(r);if("string"==typeof r&&!/Z$/i.test(r)){var s=r.match(l);if(s){var o=s[2]-1||0,n=(s[7]||"0").substring(0,3);return t?new Date(Date.UTC(s[1],o,s[3]||1,s[4]||0,s[5]||0,s[6]||0,n)):new Date(s[1],o,s[3]||1,s[4]||0,s[5]||0,s[6]||0,n)}}return new Date(r)}(e),this.init()},g.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},g.$utils=function(){return b},g.isValid=function(){return this.$d.toString()!==p},g.isSame=function(e,r){var t=f(e);return this.startOf(r)<=t&&t<=this.endOf(r)},g.isAfter=function(e,r){return f(e)<this.startOf(r)},g.isBefore=function(e,r){return this.endOf(r)<f(e)},g.$g=function(e,r,t){return b.u(e)?this[r]:this.set(t,e)},g.unix=function(){return Math.floor(this.valueOf()/1e3)},g.valueOf=function(){return this.$d.getTime()},g.startOf=function(e,i){var p=this,l=!!b.u(i)||i,u=b.p(e),d=function(e,r){var t=b.w(p.$u?Date.UTC(p.$y,r,e):new Date(p.$y,r,e),p);return l?t:t.endOf("day")},g=function(e,r){return b.w(p.toDate()[e].apply(p.toDate("s"),(l?[0,0,0,0]:[23,59,59,999]).slice(r)),p)},m=this.$W,h=this.$M,T=this.$D,E="set"+(this.$u?"UTC":"");switch(u){case a:return l?d(1,0):d(31,11);case n:return l?d(1,h):d(0,h+1);case o:var f=this.$locale().weekStart||0,w=(m<f?m+7:m)-f;return d(l?T-w:T+(6-w),h);case"day":case c:return g(E+"Hours",0);case s:return g(E+"Minutes",1);case t:return g(E+"Seconds",2);case r:return g(E+"Milliseconds",3);default:return this.clone()}},g.endOf=function(e){return this.startOf(e,!1)},g.$set=function(o,i){var p,l=b.p(o),u="set"+(this.$u?"UTC":""),d=((p={}).day=u+"Date",p[c]=u+"Date",p[n]=u+"Month",p[a]=u+"FullYear",p[s]=u+"Hours",p[t]=u+"Minutes",p[r]=u+"Seconds",p[e]=u+"Milliseconds",p)[l],g="day"===l?this.$D+(i-this.$W):i;if(l===n||l===a){var m=this.clone().set(c,1);m.$d[d](g),m.init(),this.$d=m.set(c,Math.min(this.$D,m.daysInMonth())).$d}else d&&this.$d[d](g);return this.init(),this},g.set=function(e,r){return this.clone().$set(e,r)},g.get=function(e){return this[b.p(e)]()},g.add=function(e,i){var c,p=this;e=Number(e);var l=b.p(i),u=function(r){var t=f(p);return b.w(t.date(t.date()+Math.round(r*e)),p)};if(l===n)return this.set(n,this.$M+e);if(l===a)return this.set(a,this.$y+e);if("day"===l)return u(1);if(l===o)return u(7);var d=((c={})[t]=6e4,c[s]=36e5,c[r]=1e3,c)[l]||1,g=this.$d.getTime()+e*d;return b.w(g,this)},g.subtract=function(e,r){return this.add(-1*e,r)},g.format=function(e){var r=this,t=this.$locale();if(!this.isValid())return t.invalidDate||p;var s=e||"YYYY-MM-DDTHH:mm:ssZ",o=b.z(this),n=this.$H,i=this.$m,a=this.$M,c=t.weekdays,l=t.months,d=t.meridiem,g=function(e,t,o,n){return e&&(e[t]||e(r,s))||o[t].slice(0,n)},m=function(e){return b.s(n%12||12,e,"0")},h=d||function(e,r,t){var s=e<12?"AM":"PM";return t?s.toLowerCase():s};return s.replace(u,function(e,s){return s||function(e){switch(e){case"YY":return String(r.$y).slice(-2);case"YYYY":return b.s(r.$y,4,"0");case"M":return a+1;case"MM":return b.s(a+1,2,"0");case"MMM":return g(t.monthsShort,a,l,3);case"MMMM":return g(l,a);case"D":return r.$D;case"DD":return b.s(r.$D,2,"0");case"d":return String(r.$W);case"dd":return g(t.weekdaysMin,r.$W,c,2);case"ddd":return g(t.weekdaysShort,r.$W,c,3);case"dddd":return c[r.$W];case"H":return String(n);case"HH":return b.s(n,2,"0");case"h":return m(1);case"hh":return m(2);case"a":return h(n,i,!0);case"A":return h(n,i,!1);case"m":return String(i);case"mm":return b.s(i,2,"0");case"s":return String(r.$s);case"ss":return b.s(r.$s,2,"0");case"SSS":return b.s(r.$ms,3,"0");case"Z":return o}return null}(e)||o.replace(":","")})},g.utcOffset=function(){return-(15*Math.round(this.$d.getTimezoneOffset()/15))},g.diff=function(e,c,p){var l,u=this,d=b.p(c),g=f(e),m=(g.utcOffset()-this.utcOffset())*6e4,h=this-g,T=function(){return b.m(u,g)};switch(d){case a:l=T()/12;break;case n:l=T();break;case i:l=T()/3;break;case o:l=(h-m)/6048e5;break;case"day":l=(h-m)/864e5;break;case s:l=h/36e5;break;case t:l=h/6e4;break;case r:l=h/1e3;break;default:l=h}return p?l:b.a(l)},g.daysInMonth=function(){return this.endOf(n).$D},g.$locale=function(){return m[this.$L]},g.locale=function(e,r){if(!e)return this.$L;var t=this.clone(),s=E(e,r,!0);return s&&(t.$L=s),t},g.clone=function(){return b.w(this.$d,this)},g.toDate=function(){return new Date(this.valueOf())},g.toJSON=function(){return this.isValid()?this.toISOString():null},g.toISOString=function(){return this.$d.toISOString()},g.toString=function(){return this.$d.toUTCString()},d}(),_=w.prototype;return f.prototype=_,[["$ms",e],["$s",r],["$m",t],["$H",s],["$W","day"],["$M",n],["$y",a],["$D",c]].forEach(function(e){_[e[1]]=function(r){return this.$g(r,e[0],e[1])}}),f.extend=function(e,r){return e.$i||(e(r,w,f),e.$i=!0),f},f.locale=E,f.isDayjs=T,f.unix=function(e){return f(1e3*e)},f.en=m[g],f.Ls=m,f.p={},f},e.exports=r()},5042:function(e,r,t){"use strict";var s,o;e.exports=(null==(s=t.g.process)?void 0:s.env)&&"object"==typeof(null==(o=t.g.process)?void 0:o.env)?t.g.process:t(4487)},4487:function(e){!function(){var r={229:function(e){var r,t,s,o=e.exports={};function n(){throw Error("setTimeout has not been defined")}function i(){throw Error("clearTimeout has not been defined")}function a(e){if(r===setTimeout)return setTimeout(e,0);if((r===n||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:n}catch(e){r=n}try{t="function"==typeof clearTimeout?clearTimeout:i}catch(e){t=i}}();var c=[],p=!1,l=-1;function u(){p&&s&&(p=!1,s.length?c=s.concat(c):l=-1,c.length&&d())}function d(){if(!p){var e=a(u);p=!0;for(var r=c.length;r;){for(s=c,c=[];++l<r;)s&&s[l].run();l=-1,r=c.length}s=null,p=!1,function(e){if(t===clearTimeout)return clearTimeout(e);if((t===i||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(e);try{t(e)}catch(r){try{return t.call(null,e)}catch(r){return t.call(this,e)}}}(e)}}function g(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new g(e,r)),1!==c.length||p||a(d)},g.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw Error("process.chdir is not supported")},o.umask=function(){return 0}}},t={};function s(e){var o=t[e];if(void 0!==o)return o.exports;var n=t[e]={exports:{}},i=!0;try{r[e](n,n.exports,s),i=!1}finally{i&&delete t[e]}return n.exports}s.ab="//";var o=s(229);e.exports=o}()},9935:function(e,r,t){var s=t(676);function o(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function n(e){var r=function(){if(r.called)throw Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}e.exports=s(o),e.exports.strict=s(n),o.proto=o(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return o(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})})},3316:function(e){e.exports=function(e,r,t,s){var o=t?t.call(s,e,r):void 0;if(void 0!==o)return!!o;if(e===r)return!0;if("object"!=typeof e||!e||"object"!=typeof r||!r)return!1;var n=Object.keys(e),i=Object.keys(r);if(n.length!==i.length)return!1;for(var a=Object.prototype.hasOwnProperty.bind(r),c=0;c<n.length;c++){var p=n[c];if(!a(p))return!1;var l=e[p],u=r[p];if(!1===(o=t?t.call(s,l,u,p):void 0)||void 0===o&&l!==u)return!1}return!0}},1070:function(e,r,t){"use strict";t.d(r,{qH:function(){return ru},LC:function(){return e4},ZP:function(){return rl}});var s=function(){return(s=Object.assign||function(e){for(var r,t=1,s=arguments.length;t<s;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)};function o(e,r,t){if(t||2==arguments.length)for(var s,o=0,n=r.length;o<n;o++)!s&&o in r||(s||(s=Array.prototype.slice.call(r,0,o)),s[o]=r[o]);return e.concat(s||Array.prototype.slice.call(r))}"function"==typeof SuppressedError&&SuppressedError;var n=t(7058),i=t(3316),a=t.n(i),c="-ms-",p="-moz-",l="-webkit-",u="comm",d="rule",g="decl",m="@keyframes",h=Math.abs,T=String.fromCharCode,E=Object.assign;function f(e,r){return(e=r.exec(e))?e[0]:e}function b(e,r,t){return e.replace(r,t)}function w(e,r,t){return e.indexOf(r,t)}function _(e,r){return 0|e.charCodeAt(r)}function v(e,r,t){return e.slice(r,t)}function y(e){return e.length}function k(e,r){return r.push(e),e}function P(e,r){return e.filter(function(e){return!f(e,r)})}var G=1,S=1,O=0,A=0,F=0,R="";function C(e,r,t,s,o,n,i,a){return{value:e,root:r,parent:t,type:s,props:o,children:n,line:G,column:S,length:i,return:"",siblings:a}}function U(e,r){return E(C("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},r)}function D(e){for(;e.root;)e=U(e.root,{children:[e]});k(e,e.siblings)}function L(){return F=A<O?_(R,A++):0,S++,10===F&&(S=1,G++),F}function $(){return _(R,A)}function j(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function I(e){var r,t;return(r=A-1,t=function e(r){for(;L();)switch(F){case r:return A;case 34:case 39:34!==r&&39!==r&&e(F);break;case 40:41===r&&e(r);break;case 92:L()}return A}(91===e?e+2:40===e?e+1:e),v(R,r,t)).trim()}function x(e,r){for(var t="",s=0;s<e.length;s++)t+=r(e[s],s,e,r)||"";return t}function q(e,r,t,s){switch(e.type){case"@layer":if(e.children.length)break;case"@import":case g:return e.return=e.return||e.value;case u:return"";case m:return e.return=e.value+"{"+x(e.children,s)+"}";case d:if(!y(e.value=e.props.join(",")))return""}return y(t=x(e.children,s))?e.return=e.value+"{"+t+"}":""}function M(e,r,t,s){if(e.length>-1&&!e.return)switch(e.type){case g:e.return=function e(r,t,s){var o;switch(o=t,45^_(r,0)?(((o<<2^_(r,0))<<2^_(r,1))<<2^_(r,2))<<2^_(r,3):0){case 5103:return l+"print-"+r+r;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return l+r+r;case 4789:return p+r+r;case 5349:case 4246:case 4810:case 6968:case 2756:return l+r+p+r+c+r+r;case 5936:switch(_(r,t+11)){case 114:return l+r+c+b(r,/[svh]\w+-[tblr]{2}/,"tb")+r;case 108:return l+r+c+b(r,/[svh]\w+-[tblr]{2}/,"tb-rl")+r;case 45:return l+r+c+b(r,/[svh]\w+-[tblr]{2}/,"lr")+r}case 6828:case 4268:case 2903:return l+r+c+r+r;case 6165:return l+r+c+"flex-"+r+r;case 5187:return l+r+b(r,/(\w+).+(:[^]+)/,l+"box-$1$2"+c+"flex-$1$2")+r;case 5443:return l+r+c+"flex-item-"+b(r,/flex-|-self/g,"")+(f(r,/flex-|baseline/)?"":c+"grid-row-"+b(r,/flex-|-self/g,""))+r;case 4675:return l+r+c+"flex-line-pack"+b(r,/align-content|flex-|-self/g,"")+r;case 5548:return l+r+c+b(r,"shrink","negative")+r;case 5292:return l+r+c+b(r,"basis","preferred-size")+r;case 6060:return l+"box-"+b(r,"-grow","")+l+r+c+b(r,"grow","positive")+r;case 4554:return l+b(r,/([^-])(transform)/g,"$1"+l+"$2")+r;case 6187:return b(b(b(r,/(zoom-|grab)/,l+"$1"),/(image-set)/,l+"$1"),r,"")+r;case 5495:case 3959:return b(r,/(image-set\([^]*)/,l+"$1$`$1");case 4968:return b(b(r,/(.+:)(flex-)?(.*)/,l+"box-pack:$3"+c+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+l+r+r;case 4200:if(!f(r,/flex-|baseline/))return c+"grid-column-align"+v(r,t)+r;break;case 2592:case 3360:return c+b(r,"template-","")+r;case 4384:case 3616:if(s&&s.some(function(e,r){return t=r,f(e.props,/grid-\w+-end/)}))return~w(r+(s=s[t].value),"span",0)?r:c+b(r,"-start","")+r+c+"grid-row-span:"+(~w(s,"span",0)?f(s,/\d+/):+f(s,/\d+/)-+f(r,/\d+/))+";";return c+b(r,"-start","")+r;case 4896:case 4128:return s&&s.some(function(e){return f(e.props,/grid-\w+-start/)})?r:c+b(b(r,"-end","-span"),"span ","")+r;case 4095:case 3583:case 4068:case 2532:return b(r,/(.+)-inline(.+)/,l+"$1$2")+r;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(y(r)-1-t>6)switch(_(r,t+1)){case 109:if(45!==_(r,t+4))break;case 102:return b(r,/(.+:)(.+)-([^]+)/,"$1"+l+"$2-$3$1"+p+(108==_(r,t+3)?"$3":"$2-$3"))+r;case 115:return~w(r,"stretch",0)?e(b(r,"stretch","fill-available"),t,s)+r:r}break;case 5152:case 5920:return b(r,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,function(e,t,s,o,n,i,a){return c+t+":"+s+a+(o?c+t+"-span:"+(n?i:+i-+s)+a:"")+r});case 4949:if(121===_(r,t+6))return b(r,":",":"+l)+r;break;case 6444:switch(_(r,45===_(r,14)?18:11)){case 120:return b(r,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+l+(45===_(r,14)?"inline-":"")+"box$3$1"+l+"$2$3$1"+c+"$2box$3")+r;case 100:return b(r,":",":"+c)+r}break;case 5719:case 2647:case 2135:case 3927:case 2391:return b(r,"scroll-","scroll-snap-")+r}return r}(e.value,e.length,t);return;case m:return x([U(e,{value:b(e.value,"@","@"+l)})],s);case d:if(e.length){var o,n;return o=t=e.props,n=function(r){switch(f(r,s=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":D(U(e,{props:[b(r,/:(read-\w+)/,":"+p+"$1")]})),D(U(e,{props:[r]})),E(e,{props:P(t,s)});break;case"::placeholder":D(U(e,{props:[b(r,/:(plac\w+)/,":"+l+"input-$1")]})),D(U(e,{props:[b(r,/:(plac\w+)/,":"+p+"$1")]})),D(U(e,{props:[b(r,/:(plac\w+)/,c+"input-$1")]})),D(U(e,{props:[r]})),E(e,{props:P(t,s)})}return""},o.map(n).join("")}}}function H(e,r,t,s,o,n,i,a,c,p,l,u){for(var g=o-1,m=0===o?n:[""],T=m.length,E=0,f=0,w=0;E<s;++E)for(var _=0,y=v(e,g+1,g=h(f=i[E])),k=e;_<T;++_)(k=(f>0?m[_]+" "+y:b(y,/&\f/g,m[_])).trim())&&(c[w++]=k);return C(e,r,t,0===o?d:a,c,p,l,u)}function W(e,r,t,s,o){return C(e,r,t,g,v(e,0,s),v(e,s+1,-1),s,o)}var B={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},z=t(5042),N=void 0!==z&&void 0!==z.env&&(z.env.REACT_APP_SC_ATTR||z.env.SC_ATTR)||"data-styled",V="active",K="data-styled-version",Y="6.1.11",J="/*!sc*/\n",Z="undefined"!=typeof window&&"HTMLElement"in window,Q=!!("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:void 0!==z&&void 0!==z.env&&void 0!==z.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==z.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==z.env.REACT_APP_SC_DISABLE_SPEEDY&&z.env.REACT_APP_SC_DISABLE_SPEEDY:void 0!==z&&void 0!==z.env&&void 0!==z.env.SC_DISABLE_SPEEDY&&""!==z.env.SC_DISABLE_SPEEDY&&"false"!==z.env.SC_DISABLE_SPEEDY&&z.env.SC_DISABLE_SPEEDY),X=Object.freeze([]),ee=Object.freeze({}),er=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),et=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,es=/(^-|-$)/g;function eo(e){return e.replace(et,"-").replace(es,"")}var en=/(a)(d)/gi,ei=function(e){return String.fromCharCode(e+(e>25?39:97))};function ea(e){var r,t="";for(r=Math.abs(e);r>52;r=r/52|0)t=ei(r%52)+t;return(ei(r%52)+t).replace(en,"$1-$2")}var ec,ep=function(e,r){for(var t=r.length;t;)e=33*e^r.charCodeAt(--t);return e},el=function(e){return ep(5381,e)};function eu(e){return"string"==typeof e}var ed="function"==typeof Symbol&&Symbol.for,eg=ed?Symbol.for("react.memo"):60115,em=ed?Symbol.for("react.forward_ref"):60112,eh={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},eT={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},eE={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},ef=((ec={})[em]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},ec[eg]=eE,ec);function eb(e){return("type"in e&&e.type.$$typeof)===eg?eE:"$$typeof"in e?ef[e.$$typeof]:eh}var ew=Object.defineProperty,e_=Object.getOwnPropertyNames,ev=Object.getOwnPropertySymbols,ey=Object.getOwnPropertyDescriptor,ek=Object.getPrototypeOf,eP=Object.prototype;function eG(e){return"function"==typeof e}function eS(e){return"object"==typeof e&&"styledComponentId"in e}function eO(e,r){return e&&r?"".concat(e," ").concat(r):e||r||""}function eA(e,r){if(0===e.length)return"";for(var t=e[0],s=1;s<e.length;s++)t+=r?r+e[s]:e[s];return t}function eF(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function eR(e,r){Object.defineProperty(e,"toString",{value:r})}function eC(e){for(var r=[],t=1;t<arguments.length;t++)r[t-1]=arguments[t];return Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e," for more information.").concat(r.length>0?" Args: ".concat(r.join(", ")):""))}var eU=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var r=0,t=0;t<e;t++)r+=this.groupSizes[t];return r},e.prototype.insertRules=function(e,r){if(e>=this.groupSizes.length){for(var t=this.groupSizes,s=t.length,o=s;e>=o;)if((o<<=1)<0)throw eC(16,"".concat(e));this.groupSizes=new Uint32Array(o),this.groupSizes.set(t),this.length=o;for(var n=s;n<o;n++)this.groupSizes[n]=0}for(var i=this.indexOfGroup(e+1),a=(n=0,r.length);n<a;n++)this.tag.insertRule(i,r[n])&&(this.groupSizes[e]++,i++)},e.prototype.clearGroup=function(e){if(e<this.length){var r=this.groupSizes[e],t=this.indexOfGroup(e),s=t+r;this.groupSizes[e]=0;for(var o=t;o<s;o++)this.tag.deleteRule(t)}},e.prototype.getGroup=function(e){var r="";if(e>=this.length||0===this.groupSizes[e])return r;for(var t=this.groupSizes[e],s=this.indexOfGroup(e),o=s+t,n=s;n<o;n++)r+="".concat(this.tag.getRule(n)).concat(J);return r},e}(),eD=new Map,eL=new Map,e$=1,ej=function(e){if(eD.has(e))return eD.get(e);for(;eL.has(e$);)e$++;var r=e$++;return eD.set(e,r),eL.set(r,e),r},eI=function(e,r){e$=r+1,eD.set(e,r),eL.set(r,e)},ex="style[".concat(N,"][").concat(K,'="').concat(Y,'"]'),eq=new RegExp("^".concat(N,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),eM=function(e,r,t){for(var s,o=t.split(","),n=0,i=o.length;n<i;n++)(s=o[n])&&e.registerName(r,s)},eH=function(e,r){for(var t,s=(null!==(t=r.textContent)&&void 0!==t?t:"").split(J),o=[],n=0,i=s.length;n<i;n++){var a=s[n].trim();if(a){var c=a.match(eq);if(c){var p=0|parseInt(c[1],10),l=c[2];0!==p&&(eI(l,p),eM(e,l,c[3]),e.getTag().insertRules(p,o)),o.length=0}else o.push(a)}}},eW=function(e){var r,s=document.head,o=e||s,n=document.createElement("style"),i=(r=Array.from(o.querySelectorAll("style[".concat(N,"]"))))[r.length-1],a=void 0!==i?i.nextSibling:null;n.setAttribute(N,V),n.setAttribute(K,Y);var c=t.nc;return c&&n.setAttribute("nonce",c),o.insertBefore(n,a),n},eB=function(){function e(e){this.element=eW(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var r=document.styleSheets,t=0,s=r.length;t<s;t++){var o=r[t];if(o.ownerNode===e)return o}throw eC(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,r){try{return this.sheet.insertRule(r,e),this.length++,!0}catch(e){return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var r=this.sheet.cssRules[e];return r&&r.cssText?r.cssText:""},e}(),ez=function(){function e(e){this.element=eW(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,r){if(e<=this.length&&e>=0){var t=document.createTextNode(r);return this.element.insertBefore(t,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),eN=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,r){return e<=this.length&&(this.rules.splice(e,0,r),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),eV=Z,eK={isServer:!Z,useCSSOMInjection:!Q},eY=function(){function e(e,r,t){void 0===e&&(e=ee),void 0===r&&(r={});var o=this;this.options=s(s({},eK),e),this.gs=r,this.names=new Map(t),this.server=!!e.isServer,!this.server&&Z&&eV&&(eV=!1,function(e){for(var r=document.querySelectorAll(ex),t=0,s=r.length;t<s;t++){var o=r[t];o&&o.getAttribute(N)!==V&&(eH(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this)),eR(this,function(){return function(e){for(var r=e.getTag(),t=r.length,s="",o=0;o<t;o++)(function(t){var o=eL.get(t);if(void 0!==o){var n=e.names.get(o),i=r.getGroup(t);if(void 0!==n&&0!==i.length){var a="".concat(N,".g").concat(t,'[id="').concat(o,'"]'),c="";void 0!==n&&n.forEach(function(e){e.length>0&&(c+="".concat(e,","))}),s+="".concat(i).concat(a,'{content:"').concat(c,'"}').concat(J)}}})(o);return s}(o)})}return e.registerId=function(e){return ej(e)},e.prototype.reconstructWithOptions=function(r,t){return void 0===t&&(t=!0),new e(s(s({},this.options),r),this.gs,t&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){var e,r,t;return this.tag||(this.tag=(r=(e=this.options).useCSSOMInjection,t=e.target,new eU(e.isServer?new eN(t):r?new eB(t):new ez(t))))},e.prototype.hasNameForId=function(e,r){return this.names.has(e)&&this.names.get(e).has(r)},e.prototype.registerName=function(e,r){if(ej(e),this.names.has(e))this.names.get(e).add(r);else{var t=new Set;t.add(r),this.names.set(e,t)}},e.prototype.insertRules=function(e,r,t){this.registerName(e,r),this.getTag().insertRules(ej(e),t)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(ej(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),eJ=/&/g,eZ=/^\s*\/\/.*$/gm;function eQ(e){var r,t,s,o=void 0===e?ee:e,n=o.options,i=void 0===n?ee:n,a=o.plugins,c=void 0===a?X:a,p=function(e,s,o){return o.startsWith(t)&&o.endsWith(t)&&o.replaceAll(t,"").length>0?".".concat(r):e},l=c.slice();l.push(function(e){e.type===d&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(eJ,t).replace(s,p))}),i.prefix&&l.push(M),l.push(q);var g=function(e,o,n,a){void 0===o&&(o=""),void 0===n&&(n=""),void 0===a&&(a="&"),r=a,t=o,s=RegExp("\\".concat(t,"\\b"),"g");var c,p,d,g,m,E,f=e.replace(eZ,""),P=(m=function e(r,t,s,o,n,i,a,c,p){for(var l,d=0,g=0,m=a,E=0,f=0,P=0,O=1,U=1,D=1,x=0,q="",M=n,B=i,z=o,N=q;U;)switch(P=x,x=L()){case 40:if(108!=P&&58==_(N,m-1)){-1!=w(N+=b(I(x),"&","&\f"),"&\f",h(d?c[d-1]:0))&&(D=-1);break}case 34:case 39:case 91:N+=I(x);break;case 9:case 10:case 13:case 32:N+=function(e){for(;F=$();)if(F<33)L();else break;return j(e)>2||j(F)>3?"":" "}(P);break;case 92:N+=function(e,r){for(var t;--r&&L()&&!(F<48)&&!(F>102)&&(!(F>57)||!(F<65))&&(!(F>70)||!(F<97)););return t=A+(r<6&&32==$()&&32==L()),v(R,e,t)}(A-1,7);continue;case 47:switch($()){case 42:case 47:k(C(l=function(e,r){for(;L();)if(e+F===57)break;else if(e+F===84&&47===$())break;return"/*"+v(R,r,A-1)+"*"+T(47===e?e:L())}(L(),A),t,s,u,T(F),v(l,2,-2),0,p),p);break;default:N+="/"}break;case 123*O:c[d++]=y(N)*D;case 125*O:case 59:case 0:switch(x){case 0:case 125:U=0;case 59+g:-1==D&&(N=b(N,/\f/g,"")),f>0&&y(N)-m&&k(f>32?W(N+";",o,s,m-1,p):W(b(N," ","")+";",o,s,m-2,p),p);break;case 59:N+=";";default:if(k(z=H(N,t,s,d,g,n,c,q,M=[],B=[],m,i),i),123===x){if(0===g)e(N,t,z,z,M,i,m,c,B);else switch(99===E&&110===_(N,3)?100:E){case 100:case 108:case 109:case 115:e(r,z,z,o&&k(H(r,z,z,0,0,n,c,q,n,M=[],m,B),B),n,B,m,c,o?M:B);break;default:e(N,z,z,z,[""],B,0,c,B)}}}d=g=f=0,O=D=1,q=N="",m=a;break;case 58:m=1+y(N),f=P;default:if(O<1){if(123==x)--O;else if(125==x&&0==O++&&125==(F=A>0?_(R,--A):0,S--,10===F&&(S=1,G--),F))continue}switch(N+=T(x),x*O){case 38:D=g>0?1:(N+="\f",-1);break;case 44:c[d++]=(y(N)-1)*D,D=1;break;case 64:45===$()&&(N+=I(L())),E=$(),g=m=y(q=N+=function(e){for(;!j($());)L();return v(R,e,A)}(A)),x++;break;case 45:45===P&&2==y(N)&&(O=0)}}return i}("",null,null,null,[""],(g=d=n||o?"".concat(n," ").concat(o," { ").concat(f," }"):f,G=S=1,O=y(R=g),A=0,d=[]),0,[0],d),R="",m);i.namespace&&(P=function e(r,t){return r.map(function(r){return"rule"===r.type&&(r.value="".concat(t," ").concat(r.value),r.value=r.value.replaceAll(",",",".concat(t," ")),r.props=r.props.map(function(e){return"".concat(t," ").concat(e)})),Array.isArray(r.children)&&"@keyframes"!==r.type&&(r.children=e(r.children,t)),r})}(P,i.namespace));var U=[];return x(P,(p=(c=l.concat((E=function(e){return U.push(e)},function(e){!e.root&&(e=e.return)&&E(e)}))).length,function(e,r,t,s){for(var o="",n=0;n<p;n++)o+=c[n](e,r,t,s)||"";return o})),U};return g.hash=c.length?c.reduce(function(e,r){return r.name||eC(15),ep(e,r.name)},5381).toString():"",g}var eX=new eY,e0=eQ(),e1=n.createContext({shouldForwardProp:void 0,styleSheet:eX,stylis:e0}),e2=(e1.Consumer,n.createContext(void 0));function e5(){return(0,n.useContext)(e1)}function e4(e){var r=(0,n.useState)(e.stylisPlugins),t=r[0],s=r[1],o=e5().styleSheet,i=(0,n.useMemo)(function(){var r=o;return e.sheet?r=e.sheet:e.target&&(r=r.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(r=r.reconstructWithOptions({useCSSOMInjection:!1})),r},[e.disableCSSOMInjection,e.sheet,e.target,o]),c=(0,n.useMemo)(function(){return eQ({options:{namespace:e.namespace,prefix:e.enableVendorPrefixes},plugins:t})},[e.enableVendorPrefixes,e.namespace,t]);(0,n.useEffect)(function(){a()(t,e.stylisPlugins)||s(e.stylisPlugins)},[e.stylisPlugins]);var p=(0,n.useMemo)(function(){return{shouldForwardProp:e.shouldForwardProp,styleSheet:i,stylis:c}},[e.shouldForwardProp,i,c]);return n.createElement(e1.Provider,{value:p},n.createElement(e2.Provider,{value:c},e.children))}var e3=function(){function e(e,r){var t=this;this.inject=function(e,r){void 0===r&&(r=e0);var s=t.name+r.hash;e.hasNameForId(t.id,s)||e.insertRules(t.id,s,r(t.rules,s,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=r,eR(this,function(){throw eC(12,String(t.name))})}return e.prototype.getName=function(e){return void 0===e&&(e=e0),this.name+e.hash},e}();function e6(e){for(var r="",t=0;t<e.length;t++){var s=e[t];if(1===t&&"-"===s&&"-"===e[0])return e;s>="A"&&s<="Z"?r+="-"+s.toLowerCase():r+=s}return r.startsWith("ms-")?"-"+r:r}var e9=function(e){return null==e||!1===e||""===e},e8=function(e){var r=[];for(var t in e){var s=e[t];e.hasOwnProperty(t)&&!e9(s)&&(Array.isArray(s)&&s.isCss||eG(s)?r.push("".concat(e6(t),":"),s,";"):eF(s)?r.push.apply(r,o(o(["".concat(t," {")],e8(s),!1),["}"],!1)):r.push("".concat(e6(t),": ").concat(null==s||"boolean"==typeof s||""===s?"":"number"!=typeof s||0===s||t in B||t.startsWith("--")?String(s).trim():"".concat(s,"px"),";")))}return r};function e7(e,r,t,s){return e9(e)?[]:eS(e)?[".".concat(e.styledComponentId)]:eG(e)?!eG(e)||e.prototype&&e.prototype.isReactComponent||!r?[e]:e7(e(r),r,t,s):e instanceof e3?t?(e.inject(t,s),[e.getName(s)]):[e]:eF(e)?e8(e):Array.isArray(e)?Array.prototype.concat.apply(X,e.map(function(e){return e7(e,r,t,s)})):[e.toString()]}function re(e){for(var r=0;r<e.length;r+=1){var t=e[r];if(eG(t)&&!eS(t))return!1}return!0}var rr=el(Y),rt=function(){function e(e,r,t){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===t||t.isStatic)&&re(e),this.componentId=r,this.baseHash=ep(rr,r),this.baseStyle=t,eY.registerId(r)}return e.prototype.generateAndInjectStyles=function(e,r,t){var s=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,r,t):"";if(this.isStatic&&!t.hash){if(this.staticRulesId&&r.hasNameForId(this.componentId,this.staticRulesId))s=eO(s,this.staticRulesId);else{var o=eA(e7(this.rules,e,r,t)),n=ea(ep(this.baseHash,o)>>>0);if(!r.hasNameForId(this.componentId,n)){var i=t(o,".".concat(n),void 0,this.componentId);r.insertRules(this.componentId,n,i)}s=eO(s,n),this.staticRulesId=n}}else{for(var a=ep(this.baseHash,t.hash),c="",p=0;p<this.rules.length;p++){var l=this.rules[p];if("string"==typeof l)c+=l;else if(l){var u=eA(e7(l,e,r,t));a=ep(a,u+p),c+=u}}if(c){var d=ea(a>>>0);r.hasNameForId(this.componentId,d)||r.insertRules(this.componentId,d,t(c,".".concat(d),void 0,this.componentId)),s=eO(s,d)}}return s},e}(),rs=n.createContext(void 0);rs.Consumer;var ro={};function rn(e,r,t){var o,i,a,c,p=eS(e),l=!eu(e),u=r.attrs,d=void 0===u?X:u,g=r.componentId,m=void 0===g?(o=r.displayName,i=r.parentComponentId,ro[a="string"!=typeof o?"sc":eo(o)]=(ro[a]||0)+1,c="".concat(a,"-").concat(ea(el(Y+a+ro[a])>>>0)),i?"".concat(i,"-").concat(c):c):g,h=r.displayName,T=void 0===h?eu(e)?"styled.".concat(e):"Styled(".concat(e.displayName||e.name||"Component",")"):h,E=r.displayName&&r.componentId?"".concat(eo(r.displayName),"-").concat(r.componentId):r.componentId||m,f=p&&e.attrs?e.attrs.concat(d).filter(Boolean):d,b=r.shouldForwardProp;if(p&&e.shouldForwardProp){var w=e.shouldForwardProp;if(r.shouldForwardProp){var _=r.shouldForwardProp;b=function(e,r){return w(e,r)&&_(e,r)}}else b=w}var v=new rt(t,E,p?e.componentStyle:void 0);function y(e,r){return function(e,r,t){var o,i,a=e.attrs,c=e.componentStyle,p=e.defaultProps,l=e.foldedComponentIds,u=e.styledComponentId,d=e.target,g=n.useContext(rs),m=e5(),h=e.shouldForwardProp||m.shouldForwardProp,T=(void 0===(o=p)&&(o=ee),r.theme!==o.theme&&r.theme||g||o.theme||ee),E=function(e,r,t){for(var o,n=s(s({},r),{className:void 0,theme:t}),i=0;i<e.length;i+=1){var a=eG(o=e[i])?o(n):o;for(var c in a)n[c]="className"===c?eO(n[c],a[c]):"style"===c?s(s({},n[c]),a[c]):a[c]}return r.className&&(n.className=eO(n.className,r.className)),n}(a,r,T),f=E.as||d,b={};for(var w in E)void 0===E[w]||"$"===w[0]||"as"===w||"theme"===w&&E.theme===T||("forwardedAs"===w?b.as=E.forwardedAs:h&&!h(w,f)||(b[w]=E[w]));var _=(i=e5(),c.generateAndInjectStyles(E,i.styleSheet,i.stylis)),v=eO(l,u);return _&&(v+=" "+_),E.className&&(v+=" "+E.className),b[eu(f)&&!er.has(f)?"class":"className"]=v,b.ref=t,(0,n.createElement)(f,b)}(k,e,r)}y.displayName=T;var k=n.forwardRef(y);return k.attrs=f,k.componentStyle=v,k.displayName=T,k.shouldForwardProp=b,k.foldedComponentIds=p?eO(e.foldedComponentIds,e.styledComponentId):"",k.styledComponentId=E,k.target=p?e.target:e,Object.defineProperty(k,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(r){this._foldedDefaultProps=p?function(e){for(var r=[],t=1;t<arguments.length;t++)r[t-1]=arguments[t];for(var s=0;s<r.length;s++)(function e(r,t,s){if(void 0===s&&(s=!1),!s&&!eF(r)&&!Array.isArray(r))return t;if(Array.isArray(t))for(var o=0;o<t.length;o++)r[o]=e(r[o],t[o]);else if(eF(t))for(var o in t)r[o]=e(r[o],t[o]);return r})(e,r[s],!0);return e}({},e.defaultProps,r):r}}),eR(k,function(){return".".concat(k.styledComponentId)}),l&&function e(r,t,s){if("string"!=typeof t){if(eP){var o=ek(t);o&&o!==eP&&e(r,o,s)}var n=e_(t);ev&&(n=n.concat(ev(t)));for(var i=eb(r),a=eb(t),c=0;c<n.length;++c){var p=n[c];if(!(p in eT||s&&s[p]||a&&p in a||i&&p in i)){var l=ey(t,p);try{ew(r,p,l)}catch(e){}}}}return r}(k,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),k}function ri(e,r){for(var t=[e[0]],s=0,o=r.length;s<o;s+=1)t.push(r[s],e[s+1]);return t}var ra=function(e){return Object.assign(e,{isCss:!0})};function rc(e){for(var r=[],t=1;t<arguments.length;t++)r[t-1]=arguments[t];return eG(e)||eF(e)?ra(e7(ri(X,o([e],r,!0)))):0===r.length&&1===e.length&&"string"==typeof e[0]?e7(e):ra(e7(ri(e,r)))}var rp=function(e){return function e(r,t,n){if(void 0===n&&(n=ee),!t)throw eC(1,t);var i=function(e){for(var s=[],i=1;i<arguments.length;i++)s[i-1]=arguments[i];return r(t,n,rc.apply(void 0,o([e],s,!1)))};return i.attrs=function(o){return e(r,t,s(s({},n),{attrs:Array.prototype.concat(n.attrs,o).filter(Boolean)}))},i.withConfig=function(o){return e(r,t,s(s({},n),o))},i}(rn,e)},rl=rp;er.forEach(function(e){rl[e]=rp(e)}),function(){function e(e,r){this.rules=e,this.componentId=r,this.isStatic=re(e),eY.registerId(this.componentId+1)}e.prototype.createStyles=function(e,r,t,s){var o=s(eA(e7(this.rules,r,t,s)),""),n=this.componentId+e;t.insertRules(n,n,o)},e.prototype.removeStyles=function(e,r){r.clearRules(this.componentId+e)},e.prototype.renderStyles=function(e,r,t,s){e>2&&eY.registerId(this.componentId+e),this.removeStyles(e,t),this.createStyles(e,r,t,s)}}();var ru=function(){function e(){var e=this;this._emitSheetCSS=function(){var r=e.instance.toString(),s=t.nc,o=eA([s&&'nonce="'.concat(s,'"'),"".concat(N,'="true"'),"".concat(K,'="').concat(Y,'"')].filter(Boolean)," ");return"<style ".concat(o,">").concat(r,"</style>")},this.getStyleTags=function(){if(e.sealed)throw eC(2);return e._emitSheetCSS()},this.getStyleElement=function(){if(e.sealed)throw eC(2);var r,o=((r={})[N]="",r[K]=Y,r.dangerouslySetInnerHTML={__html:e.instance.toString()},r),i=t.nc;return i&&(o.nonce=i),[n.createElement("style",s({},o,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new eY({isServer:!0}),this.sealed=!1}return e.prototype.collectStyles=function(e){if(this.sealed)throw eC(2);return n.createElement(e4,{sheet:this.instance},e)},e.prototype.interleaveWithNodeStream=function(e){throw eC(3)},e}()},676:function(e){e.exports=function e(r,t){if(r&&t)return e(r)(t);if("function"!=typeof r)throw TypeError("need wrapper function");return Object.keys(r).forEach(function(e){s[e]=r[e]}),s;function s(){for(var e=Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var s=r.apply(this,e),o=e[e.length-1];return"function"==typeof s&&s!==o&&Object.keys(o).forEach(function(e){s[e]=o[e]}),s}}}}]);